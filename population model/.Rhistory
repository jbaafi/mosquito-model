visualize(states)
View(out)
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
# Define a function
visualize <- function(states){
# Set plot environment
par(mfrow = c(3, 2), mar=c(3,4,2,2))    # 2 rows, 2 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density",
pch = 19, col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density",
pch = 19, col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density",
pch = 19, col = "yellow")     # plot no. 3
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts",
pch = 19, col = "red")    # plot no. 2
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting",
pch = 19, col = "violet")    # plot no. 2
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing",
pch = 19, col = "pink")    # plot no. 2
}
visualize(states)
# Define a function
visualize <- function(states){
# Set plot environment
par(mfrow = c(3, 2), mar=c(4,4,2,2))    # 2 rows, 2 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density",
pch = 19, col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density",
pch = 19, col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density",
pch = 19, col = "yellow")     # plot no. 3
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts",
pch = 19, col = "red")    # plot no. 2
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting",
pch = 19, col = "violet")    # plot no. 2
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing",
pch = 19, col = "pink")    # plot no. 2
}
visualize(states)
# Define a function
visualize <- function(states){
# Set plot environment
par(mfrow = c(3, 2), mar=c(4.5,4,2,2))    # 2 rows, 2 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density",
pch = 19, col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density",
pch = 19, col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density",
pch = 19, col = "yellow")     # plot no. 3
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts",
pch = 19, col = "red")    # plot no. 2
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting",
pch = 19, col = "violet")    # plot no. 2
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing",
pch = 19, col = "pink")    # plot no. 2
}
visualize(states)
# Define a function
visualize <- function(states){
# Set plot environment
par(mfrow = c(3, 2), mar=c(4.5,4,2,2))    # 2 rows, 2 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density", col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density",
pch = 19, col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density",
pch = 19, col = "yellow")     # plot no. 3
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts",
pch = 19, col = "red")    # plot no. 2
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting",
pch = 19, col = "violet")    # plot no. 2
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing",
pch = 19, col = "pink")    # plot no. 2
}
visualize(states)
# Define a function
visualize <- function(states){
# Set plot environment
par(mfrow = c(3, 2), mar=c(4.5,4,2,2))    # 2 rows, 2 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density", col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density", col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density", col = "yellow")     # plot no. 3
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts", col = "red")# plot no. 4
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting", col = "violet")# plot no.5
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing", col = "pink")# plot no. 6
}
visualize(states)
# Define a function
visualize <- function(states){
# Set plot environment
par(mfrow = c(3, 2), mar=c(4,4,2,2))    # 2 rows, 2 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density", col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density", col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density", col = "yellow")     # plot no. 3
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts", col = "red")# plot no. 4
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting", col = "violet")# plot no.5
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing", col = "pink")# plot no. 6
}
visualize(states)
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
source("~/Documents/GitHub/model-chapter1/chapter1model.R")
knitr::opts_chunk$set(echo = TRUE)
# Load packages
pacman::p_load(pacman, deSolve, tidyverse)
# Define a function for the system of equations
pop.model <- function(t, y, ...){
# The number of states
E = y[1]
L = y[2]
P = y[3]
Ah = y[4]
Ar = y[5]
Ao = y[6]
# The system of equations (This model is based on Lutambi et al, 2013)
dE <- b*phi_Ao*Ao - (rho_E + mu_E1 + mu_E2)*E
dL <- rho_E*E - (rho_L + mu_L1 + mu_L2 + delta_L*L)*L
dP <- rho_L*L - (rho_P + mu_P1 + mu_P2)*P
dAh <- rho_P*P + phi_Ao*Ao - (rho_Ah + mu_Ah1 + mu_Ah2)*Ah
dAr <- rho_Ah*Ah - (rho_Ar + mu_Ar1 +mu_Ar2)*Ar
dAo <- rho_Ar*Ar - (phi_Ao + mu_Ao1 + mu_Ao2)*Ao
return(list(c(dE, dL, dP, dAh, dAr, dAo)))
}
# Model parameters (All parameter values are based on Lutambi et al, 2013) and adapted to Anopheles species
b  = 200      # number of eggs laid per oviposition (range  100 - 400 eggs at a time) https://www.canada.ca/en/health-canada/services/pest-control-tips/mosquitoes.html
phi_Ao = 3  # oviposition rate
rho_E = 0.50     # egg hatching takes 2 days on average
mu_E1 =  0.56    # egg mortality rate (It is 0.1 in Caily et al)
mu_E2 = 0.005    # extra natural mortality of eggs that is not dependent on environmental conditions
rho_L = 0.14   # the larval period for the Anopheles mosquitoes is found to be 7 days
mu_L1 =  0.44    # This is 0.08 according to Caily et al
mu_L2 = 0.005
delta_L = 0.05
rho_P = 0.50    # the pupal period (1/FP) lasts for 2 days on average
mu_P1 = 0.37  # This is 0.1 in Cailly et al
mu_P2 = 0.005
rho_Ah =  0.46 # 2 (According to Cailly et al, 2012, this parameter takes the value of 2 day^-1)
mu_Ah1 = 0.18
mu_Ah2 = 0.005
rho_Ar =  0.43
mu_Ar1 = 0.0043
mu_Ar2 = 0.005
mu_Ao1 = 0.41
mu_Ao2 = 0.005
param <- c(b, phi_Ao, rho_E, mu_E1, mu_E2, rho_L, mu_L1, mu_L2, delta_L, rho_P, mu_P1, mu_P2,
rho_Ah, mu_Ah1, mu_Ah2, rho_Ar, mu_Ar1, mu_Ar2, mu_Ao1, mu_Ao2)
# Model parameters (All parameter values are based on Lutambi et al, 2013) and adapted to Anopheles species
b  = 200      # number of eggs laid per oviposition (range  100 - 400 eggs at a time) https://www.canada.ca/en/health-canada/services/pest-control-tips/mosquitoes.html
phi_Ao = 3  # oviposition rate
rho_E = 0.50     # egg hatching takes 2 days on average
mu_E1 =  0.56    # egg mortality rate (It is 0.1 in Caily et al)
mu_E2 = 0.005    # extra natural mortality of eggs that is not dependent on environmental conditions
rho_L = 0.14   # the larval period for the Anopheles mosquitoes is found to be 7 days
mu_L1 =  0.44    # This is 0.08 according to Caily et al
mu_L2 = 0.005
delta_L = 0.05
rho_P = 0.50    # the pupal period (1/FP) lasts for 2 days on average
mu_P1 = 0.37  # This is 0.1 in Cailly et al
mu_P2 = 0.005
rho_Ah =  0.46 # 2 (According to Cailly et al, 2012, this parameter takes the value of 2 day^-1)
mu_Ah1 = 0.18
mu_Ah2 = 0.005
rho_Ar =  0.43
mu_Ar1 = 0.0043
mu_Ar2 = 0.005
mu_Ao1 = 0.41
mu_Ao2 = 0.005
# List all the parameters to be called in the ode() function
param <- c(b, phi_Ao, rho_E, mu_E1, mu_E2, rho_L, mu_L1, mu_L2, delta_L, rho_P, mu_P1, mu_P2,
rho_Ah, mu_Ah1, mu_Ah2, rho_Ar, mu_Ar1, mu_Ar2, mu_Ao1, mu_Ao2)
# Initial conditions (I am not sure what values to use as initial conditions)
y.initial <- c(100.0, 0.0, 0.0, 0.0, 0.0, 100.0)
# Time steps (Period with which to run the simulation)
times <- seq(0, 100, by = 0.1)
# Numerical integration using the ode() function from deSolve package
out <-  ode(y = y.initial, func = pop.model, times = times, parms = param)
# Put the simulated values into a dataframe
out <- data.frame(out)
# Numerical integration using the ode() function from deSolve package
out <-  ode(y = y.initial, func = pop.model, times = times, parms = param)
# Put the simulated values into a dataframe
out <- data.frame(out)
# Numerical integration using the ode() function from deSolve package
out <-  ode(y = y.initial, func = pop.model, times = times, parms = param)
# Put the simulated values into a dataframe
out <- data.frame(out)
# Rename columns of out data frame
out <- out %>%
rename(eggs = X1, larvae = X2, pupae = X3, host.seeking.adult = X4,
resting.adults = X5, ovipositing.adults = X6)
# Produce graphs with the simulated values. I do this in a function
visualize <- function(states){
# Set plot environment
par(mfrow = c(3, 2), mar=c(4,4,2,2))    # 2 rows, 2 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density", col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density", col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density", col = "yellow")     # plot no. 3
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts", col = "red")# plot no. 4
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting", col = "violet")# plot no.5
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing", col = "pink")# plot no. 6
}
visualize(states)
source("~/Documents/GitHub/climate-and-mosquitoes/useful files/basic.pop.model3B.R")
graph(state)
dev.off()
par(mfrow = c(3, 1), mar=c(4,4,2,2))    # 2 rows, 2 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density", col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density", col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density", col = "yellow")     # plot no. 3
par(mfrow = c(3, 1), mar=c(4,4,2,2))    # 3 rows, 1 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density", col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density", col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density", col = "yellow")     # plot no. 3
# Load packages
pacman::p_load(pacman, deSolve, tidyverse)
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics('./figures/flow_diagram.png')
# Load packages
pacman::p_load(pacman, deSolve, tidyverse)
# Define a function for the system of equations
pop.model <- function(t, y, ...){
# The number of states
E = y[1]
L = y[2]
P = y[3]
Ah = y[4]
Ar = y[5]
Ao = y[6]
# The system of equations (This model is based on Lutambi et al, 2013)
dE <- b*phi_Ao*Ao - (rho_E + mu_E1 + mu_E2)*E
dL <- rho_E*E - (rho_L + mu_L1 + mu_L2 + delta_L*L)*L
dP <- rho_L*L - (rho_P + mu_P1 + mu_P2)*P
dAh <- rho_P*P + phi_Ao*Ao - (rho_Ah + mu_Ah1 + mu_Ah2)*Ah
dAr <- rho_Ah*Ah - (rho_Ar + mu_Ar1 +mu_Ar2)*Ar
dAo <- rho_Ar*Ar - (phi_Ao + mu_Ao1 + mu_Ao2)*Ao
return(list(c(dE, dL, dP, dAh, dAr, dAo)))
}
# Model parameters (All parameter values are based on Lutambi et al, 2013) and adapted to Anopheles species
b  = 200      # number of eggs laid per oviposition (range  100 - 400 eggs at a time) https://www.canada.ca/en/health-canada/services/pest-control-tips/mosquitoes.html
phi_Ao = 3  # oviposition rate
rho_E = 0.50     # egg hatching takes 2 days on average
mu_E1 =  0.56    # egg mortality rate (It is 0.1 in Caily et al)
mu_E2 = 0.005    # extra natural mortality of eggs that is not dependent on environmental conditions
rho_L = 0.14   # the larval period for the Anopheles mosquitoes is found to be 7 days
mu_L1 =  0.44    # This is 0.08 according to Caily et al
mu_L2 = 0.005
delta_L = 0.05
rho_P = 0.50    # the pupal period (1/FP) lasts for 2 days on average
mu_P1 = 0.37  # This is 0.1 in Cailly et al
mu_P2 = 0.005
rho_Ah =  0.46 # 2 (According to Cailly et al, 2012, this parameter takes the value of 2 day^-1)
mu_Ah1 = 0.18
mu_Ah2 = 0.005
rho_Ar =  0.43
mu_Ar1 = 0.0043
mu_Ar2 = 0.005
mu_Ao1 = 0.41
mu_Ao2 = 0.005
# List all the parameters to be called in the ode() function
param <- c(b, phi_Ao, rho_E, mu_E1, mu_E2, rho_L, mu_L1, mu_L2, delta_L, rho_P, mu_P1, mu_P2,
rho_Ah, mu_Ah1, mu_Ah2, rho_Ar, mu_Ar1, mu_Ar2, mu_Ao1, mu_Ao2)
# Initial conditions (I am not sure what values to use as initial conditions)
y.initial <- c(100.0, 0.0, 0.0, 0.0, 0.0, 100.0)
# Time steps (Period with which to run the simulation)
times <- seq(0, 100, by = 0.1)
# Numerical integration using the ode() function from deSolve package
out <-  ode(y = y.initial, func = pop.model, times = times, parms = param)
# Put the simulated values into a dataframe
out <- data.frame(out)
# Rename columns of out data frame
out <- out %>%
rename(eggs = X1, larvae = X2, pupae = X3, host.seeking.adult = X4,
resting.adults = X5, ovipositing.adults = X6)
# Produce graphs with the simulated values. I do this in a function
visualize <- function(states){
# Set plot environment
par(mfrow = c(3, 2), mar=c(4,4,2,2))    # 2 rows, 2 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density", col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density", col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density", col = "yellow")     # plot no. 3
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts", col = "red")# plot no. 4
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting", col = "violet")# plot no.5
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing", col = "pink")# plot no. 6
}
visualize(states)
par(mfrow = c(3, 1), mar=c(4,4,2,2))    # 3 rows, 1 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density", col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density", col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density", col = "yellow")     # plot no. 3
par(mfrow = c(3, 1), mar=c(4,4,2,2))    # 3 rows, 1 columns
# Create plots
plot(out$time, out$eggs, type = "l", ylab = "Egg density", col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density", col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density", col = "yellow")     # plot no. 3
source("~/Documents/GitHub/climate-and-mosquitoes/useful files/basic.pop.model3B.R")
graph(state)
source("~/Documents/GitHub/climate-and-mosquitoes/useful files/basic.pop.model4.R")
visualize(states)
par(mfrow = c(3, 1), mar=c(4,4,2,2))    # 3 rows, 1 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density", col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density", col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density", col = "yellow")     # plot no. 3
par(mfrow = c(3, 1), mar=c(4,4,2,2))    # 3 rows, 1 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density", col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density", col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density", col = "yellow")     # plot no. 3
par(mfrow = c(2, 1), mar=c(4,4,2,2))    # 2 rows, 1 columns
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting", col = "violet")# plot no.5
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing", col = "pink")# plot no. 6
par(mfrow = c(2, 1), mar=c(4,4,2,2))    # 2 rows, 1 columns
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts", col = "red")# plot
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting", col = "violet")# plot no.5
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing", col = "pink")# plot
par(mfrow = c(3, 1), mar=c(4,4,2,2))    # 2 rows, 1 columns
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts", col = "red")# plot
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting", col = "violet")# plot no.5
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing", col = "pink")# plot
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics('./figures/flow_diagram.png')
# Load packages
pacman::p_load(pacman, deSolve, tidyverse)
# Define a function for the system of equations
pop.model <- function(t, y, ...){
# The number of states
E = y[1]
L = y[2]
P = y[3]
Ah = y[4]
Ar = y[5]
Ao = y[6]
# The system of equations (This model is based on Lutambi et al, 2013)
dE <- b*phi_Ao*Ao - (rho_E + mu_E1 + mu_E2)*E
dL <- rho_E*E - (rho_L + mu_L1 + mu_L2 + delta_L*L)*L
dP <- rho_L*L - (rho_P + mu_P1 + mu_P2)*P
dAh <- rho_P*P + phi_Ao*Ao - (rho_Ah + mu_Ah1 + mu_Ah2)*Ah
dAr <- rho_Ah*Ah - (rho_Ar + mu_Ar1 +mu_Ar2)*Ar
dAo <- rho_Ar*Ar - (phi_Ao + mu_Ao1 + mu_Ao2)*Ao
return(list(c(dE, dL, dP, dAh, dAr, dAo)))
}
# Model parameters (All parameter values are based on Lutambi et al, 2013) and adapted to Anopheles species
b  = 200      # number of eggs laid per oviposition (range  100 - 400 eggs at a time) https://www.canada.ca/en/health-canada/services/pest-control-tips/mosquitoes.html
phi_Ao = 3  # oviposition rate
rho_E = 0.50     # egg hatching takes 2 days on average
mu_E1 =  0.56    # egg mortality rate (It is 0.1 in Caily et al)
mu_E2 = 0.005    # extra natural mortality of eggs that is not dependent on environmental conditions
rho_L = 0.14   # the larval period for the Anopheles mosquitoes is found to be 7 days
mu_L1 =  0.44    # This is 0.08 according to Caily et al
mu_L2 = 0.005
delta_L = 0.05
rho_P = 0.50    # the pupal period (1/FP) lasts for 2 days on average
mu_P1 = 0.37  # This is 0.1 in Cailly et al
mu_P2 = 0.005
rho_Ah =  0.46 # 2 (According to Cailly et al, 2012, this parameter takes the value of 2 day^-1)
mu_Ah1 = 0.18
mu_Ah2 = 0.005
rho_Ar =  0.43
mu_Ar1 = 0.0043
mu_Ar2 = 0.005
mu_Ao1 = 0.41
mu_Ao2 = 0.005
# List all the parameters to be called in the ode() function
param <- c(b, phi_Ao, rho_E, mu_E1, mu_E2, rho_L, mu_L1, mu_L2, delta_L, rho_P, mu_P1, mu_P2,
rho_Ah, mu_Ah1, mu_Ah2, rho_Ar, mu_Ar1, mu_Ar2, mu_Ao1, mu_Ao2)
# Initial conditions (I am not sure what values to use as initial conditions)
y.initial <- c(100.0, 0.0, 0.0, 0.0, 0.0, 50.0)
# Time steps (Period with which to run the simulation)
times <- seq(0, 100, by = 0.1)
# Numerical integration using the ode() function from deSolve package
out <-  ode(y = y.initial, func = pop.model, times = times, parms = param)
# Put the simulated values into a dataframe
out <- data.frame(out)
# Rename columns of out data frame
out <- out %>%
rename(eggs = X1, larvae = X2, pupae = X3, host.seeking.adult = X4,
resting.adults = X5, ovipositing.adults = X6)
# Produce graphs with the simulated values. I do this in a function
visualize <- function(states){
# Set plot environment
par(mfrow = c(3, 2), mar=c(4,4,2,2))    # 2 rows, 2 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density", col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density", col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density", col = "yellow")     # plot no. 3
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts", col = "red")# plot no. 4
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting", col = "violet")# plot no.5
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing", col = "pink")# plot no. 6
}
visualize(states)
par(mfrow = c(3, 1), mar=c(4,4,2,2))    # 3 rows, 1 columns
# Create plots
plot(out$time, out$eggs, type = "l", xlab = "Time (days)", ylab = "Egg density", col = "blue")  # plot no. 1
plot(out$time, out$larvae, type = "l", xlab = "Time (days)", ylab = "Larval density", col = "green")     # plot no. 2
plot(out$time, out$pupae, type = "l", xlab = "Time (days)", ylab = "Pupal density", col = "yellow")     # plot no. 3
par(mfrow = c(3, 1), mar=c(4,4,2,2))    # 2 rows, 1 columns
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts", col = "red")# plot
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting", col = "violet")# plot no.5
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing", col = "pink")# plot
par(mfrow = c(3, 1))    # 2 rows, 1 columns
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts", col = "red")# plot
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting", col = "violet")# plot no.5
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing", col = "pink")# plot
par(mfrow = c(3, 1), mar=c(4,4,2,2))    # 2 rows, 1 columns
plot(out$time, out$host.seeking.adult, type = "l", xlab = "Time (days)", ylab = "Adult seeking hosts", col = "red")# plot
plot(out$time, out$resting.adults, type = "l", xlab = "Time (days)", ylab = "Adult resting", col = "violet")# plot no.5
plot(out$time, out$ovipositing.adults, type = "l", xlab = "Time (days)", ylab = "Adult ovipositing", col = "pink")# plot
# clears the workspace
rm(list = ls())
# clears the workspace
rm(list = ls())
# Load packages
pacman::p_load(pacman, deSolve, tidyverse, dplyr, rio)
# Load daily rainfall data
precip <- import("precipitation.csv")
# Set working directory for the script
setwd("/Users/jjosephbaafi/Documents/Github/mosquito-model/population model")
# Set working directory for the script
setwd("/Users/josephbaafi/Documents/Github/mosquito-model/population model")
# Load daily rainfall data
precip <- import("precipitation.csv")
# clears the workspace
rm(list = ls())
# Set working directory for the script
setwd("/Users/josephbaafi/Documents/Github/mosquito-model/population model")
# Load packages
pacman::p_load(pacman, deSolve, tidyverse, dplyr, rio)
# Load daily rainfall data
precip <- import("precipitation.csv")
View(precip)
View(precip)
source("~/Documents/GitHub/climate-and-mosquitoes/useful files/basic.pop.model6.R")
source("~/Documents/GitHub/climate-and-mosquitoes/useful files/basic.pop.model6.R")
source("~/Documents/GitHub/climate-and-mosquitoes/useful files/basic.pop.model6.R")
source("~/Documents/GitHub/climate-and-mosquitoes/useful files/basic.pop.model6.R")
source("~/Documents/GitHub/climate-and-mosquitoes/useful files/basic.pop.model6.R")
source("~/Documents/GitHub/climate-and-mosquitoes/useful files/basic.pop.model6.R")
source("~/Documents/GitHub/climate-and-mosquitoes/useful files/basic.pop.model6.R")
source("~/Documents/GitHub/climate-and-mosquitoes/useful files/basic.pop.model6.R")
temp <- function(t){
Temp <- 8.91910 - 5.59158*sin(2*pi*t/365) - 11.93443*cos(2*pi*t/365)
return(Temp)
}
t <- seq(1, 365)
length(t)
temp(t)
length(temp(t))
plot(t, temp(t))
plot(t, temp(t), type = "l")
t <- seq(1, 365*2)
plot(t, temp(t), type = "l")
rhoAo = exp(-0.015*(temp(t)-22)^2)
plot(temp(t), rhoAo)
dev.off()
rhoAo = exp(-0.015*(temp(t)-22)^2)
plot(temp(t), rhoAo)
plot(temp(t), rhoAo, type = "l")
rhoAo
summary(rhoAo)
plot(t, rhoAo, type = "l")
# Just to understand some functions
t <- seq(1, 365)
temp <- function(t){
Temp <- 8.91910 - 5.59158*sin(2*pi*t/365) - 11.93443*cos(2*pi*t/365)
return(Temp)
}
rhoAo = exp(-0.015*(temp(t)-22)^2)
plot(temp(t), rhoAo, type = "l")
plot(t, rhoAo, type = "l")
# Just to understand some functions
t <- seq(1, 365*2)
temp <- function(t){
Temp <- 8.91910 - 5.59158*sin(2*pi*t/365) - 11.93443*cos(2*pi*t/365)
return(Temp)
}
rhoAo = exp(-0.015*(temp(t)-22)^2)
plot(temp(t), rhoAo, type = "l")
plot(t, rhoAo, type = "l")
View(pop.model)
View(temp)
View(Temp)
